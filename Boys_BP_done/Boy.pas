Program Animation(input,output);
uses
  Graph,Crt;
const
 Boy:array[0..3] of array[0..3,0..3,0..7] of byte =
(((($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$01,$07,$1F,$3F,$3F,$3F),
($00,$78,$FC,$F4,$F0,$F0,$F0,$B0)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$01,$03,$07,$0e,$0e,$0c),
($3f,$1f,$cf,$e7,$f7,$7f,$7e,$fe),
($b0,$f8,$b8,$c8,$f0,$80,$00,$08)),

(($00,$00,$01,$03,$07,$0f,$0e,$0c),
($01,$07,$cf,$cf,$df,$ff,$ff,$ef),
($fe,$fe,$fe,$ff,$f7,$e3,$80,$80),
($78,$78,$f0,$c0,$80,$00,$00,$00)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($c3,$03,$03,$01,$01,$00,$00,$00),
($80,$83,$87,$cf,$fe,$fc,$f0,$60),
($00,$00,$00,$00,$00,$00,$00,$00))),

((($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$03,$0f),
($00,$00,$00,$00,$7c,$fe,$fe,$fc)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$01,$03,$07,$06),
($1f,$3f,$3f,$1f,$9f,$cf,$e7,$ff),
($f8,$f8,$f8,$d8,$d8,$fc,$dc,$e4)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($06,$06,$0f,$3f,$7f,$ff,$ff,$7f),
($7f,$fe,$fc,$fc,$fc,$fd,$df,$8f),
($f8,$00,$00,$60,$e0,$e0,$c0,$80)),

(($00,$00,$01,$01,$00,$00,$00,$00),
($7f,$ff,$ef,$cf,$1e,$7f,$ff,$fc),
($80,$c0,$c0,$00,$00,80,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00))),

((($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$03,$07,$0f,$0f,$0f),
($00,$00,$7e,$ff,$ff,$ff,$fc,$ec)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($0f,$0f,$07,$01,$01,$07,$3f,$ff),
($ec,$fe,$ee,$f2,$fc,$e0,$80,$00)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($01,$01,$03,$07,$0f,$1f,$3f,$ff),
($ff,$ff,$fe,$ff,$ff,$fc,$ff,$ff),
($00,$00,$00,$80,$80,$00,$80,$00)),

(($01,$03,$0f,$1e,$1e,$1c,$1e,$1e),
($fc,$c0,$00,$00,$00,$00,$00,$00),
($fc,$3e,$0e,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00))),

((($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($00,$01,$07,$0f,$0f,$0f,$0f,$07),
($00,$fe,$ff,$ff,$fd,$fc,$ec,$ec)),

(($00,$00,$00,$00,$00,$00,$3f,$fe),
($0d,$1f,$1e,$00,$00,$00,$07,$1f),
($c7,$e3,$79,$3f,$3f,$fe,$ff,$ff),
($fe,$fe,$f2,$fc,$00,$03,$89,$ff)),

(($fe,$fc,$3f,$3f,$1f,$00,$00,$00),
($3f,$ff,$ff,$ff,$ff,$00,$00,$00),
($ff,$f0,$e0,$c0,$f0,$f8,$3f,$1f),
($fc,$00,$00,$60,$e0,$e0,$c0,$c0)),

(($00,$00,$00,$00,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00),
($0f,$06,$00,$00,$00,$00,$00,$00),
($80,$00,$00,$00,$00,$00,$00,$00))));

Mask:array[0..7]of byte =(128,64,32,16,8,4,2,1);

Var
Buffer:array[0..3,1..166] of byte;
xCoord,yCoord,x,y:integer;i,j,k,n,f:byte;
ch:Char;
 grDriver,grMode,ErrCode: Integer;

begin

  grDriver := Detect; InitGraph(grDriver, grMode,'c:\Programs\bp\Bgi'); ErrCode := GraphResult;
  if (ErrCode<>grOk) then begin Writeln('Graphics error:', GraphErrorMsg(ErrCode));exit; end;
  { Do graphics }

Setcolor(WHITE);
Rectangle(1, 1, GetMaxX-1, GetMaxY-1);
Outtextxy(7*8,23*8,'Animation');
SetBkColor(Green);
for f:=0 to 14 do begin
  xCoord:=20+f*35; yCoord:=trunc(GetMaxY/2);
  for i:=0 to 3 do
   for j:=0 to 3 do
    for k:=0 to 7 do begin
      y:=yCoord+i*8+k;
      for n:=0 to 7 do begin
        x:=xCoord+j*8+n;
        if Boy[f mod 4,i,j,k] and Mask[n] <>0 then PutPixel(x,y,RED);
        end;
     end;
   Ch:=Readkey;
 end;

 Setcolor(YEllOW); Outtextxy(300,300,'Ready,please any key....');
 repeat until keyPressed;
 CloseGraph;

end.
