
//Animation
#include <stdio.h>
#include <graphics.h>
#include <stdlib.h>
#include <conio.h>
#include <dos.h>

unsigned int Mask[8]={0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
unsigned int Boy[4][4][4][8] =
{{{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x01,0x07,0x1F,0x3F,0x3F,0x3F},
{0x00,0x78,0xFC,0xF4,0xF0,0xF0,0xF0,0xB0}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x01,0x03,0x07,0x0e,0x0e,0x0c},
{0x3f,0x1f,0xcf,0xe7,0xf7,0x7f,0x7e,0xfe},
{0xb0,0xf8,0xb8,0xc8,0xf0,0x80,0x00,0x08}},

{{0x00,0x00,0x01,0x03,0x07,0x0f,0x0e,0x0c},
{0x01,0x07,0xcf,0xcf,0xdf,0xff,0xff,0xef},
{0xfe,0xfe,0xfe,0xff,0xf7,0xe3,0x80,0x80},
{0X78,0x78,0xf0,0xc0,0x80,0x00,0x00,0x00}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0xc3,0x03,0x03,0x01,0x01,0x00,0x00,0x00},
{0x80,0x83,0x87,0xcf,0xfe,0xfc,0xf0,0x60},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}},

{{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x0f},
{0x00,0x00,0x00,0x00,0x7c,0xfe,0xfe,0xfc}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x01,0x03,0x07,0x06},
{0x1f,0x3f,0x3f,0x1f,0x9f,0xcf,0xe7,0xff},
{0xf8,0xf8,0xf8,0xd8,0xd8,0xfc,0xdc,0xe4}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x06,0x06,0x0f,0x3f,0x7f,0xff,0xff,0x7f},
{0x7f,0xfe,0xfc,0xfc,0xfc,0xfd,0xdf,0x8f},
{0xf8,0x00,0x00,0x60,0xe0,0xe0,0xc0,0x80}},

{{0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00},
{0x7f,0xff,0xef,0xcf,0x1e,0x7f,0xff,0xfc},
{0x80,0xc0,0xc0,0x00,0x00,0x80,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}},

{{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x03,0x07,0x0f,0x0f,0x0f},
{0x00,0x00,0x7e,0xff,0xff,0xff,0xfc,0xec}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x0f,0x0f,0x07,0x01,0x01,0x07,0x3f,0xff},
{0xec,0xfe,0xee,0xf2,0xfc,0xe0,0x80,0x00}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x01,0x01,0x03,0x07,0x0f,0x1f,0x3f,0xff},
{0xff,0xff,0xfe,0xff,0xff,0xfc,0xff,0xff},
{0x00,0x00,0x00,0x80,0x80,0x00,0x80,0x00}},

{{0x01,0x03,0x0f,0x1e,0x1e,0x1c,0x1e,0x1e},
{0xfc,0xc0,0x00,0x00,0x00,0x00,0x00,0x00},
{0xfc,0x3e,0x0e,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}},

{{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x01,0x07,0x0f,0x0f,0x0f,0x0f,0x07},
{0x00,0xfe,0xff,0xff,0xfd,0xfc,0xec,0xec}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xfe},
{0x0d,0x1f,0x1e,0x00,0x00,0x00,0x07,0x1f},
{0xc7,0xe3,0x79,0x3f,0x3f,0xfe,0xff,0xff},
{0xfe,0xfe,0xf2,0xfc,0x00,0x03,0x89,0xff}},

{{0xfe,0xfc,0x3f,0x3f,0x1f,0x00,0x00,0x00},
{0x3f,0xff,0xff,0xff,0xff,0x00,0x00,0x00},
{0xff,0xf0,0xe0,0xc0,0xf0,0xf8,0x3f,0x1f},
{0xfc,0x00,0x00,0x60,0xe0,0xe0,0xc0,0xc0}},

{{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x0f,0x06,0x00,0x00,0x00,0x00,0x00,0x00},
{0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}}};

int main(void)
{
   int xCoord,yCoord,x,y,i,j,k,n,f,var;
   unsigned int var1;unsigned int var2;

   /* request auto detection */
   int gdriver = DETECT, gmode, errorcode;
   int color, maxx, maxy, maxcolor;

/* register a driver that was added int graphics.lib */
/* For information on adding the driver, see the BGIOBJ section of UTIL.DOC */
errorcode = registerbgidriver(EGAVGA_driver);

/* report any registration errors */
if (errorcode < 0)
{  printf("Graphics error: %s\n", grapherrormsg(errorcode));
   puts("Press any key to halt:"); getch(); exit(0); /* terminate with an error code */
}

/* initialize graphics and local variables */
initgraph(&gdriver, &gmode, "");

/* read result of initialization */ errorcode = graphresult();
   if (errorcode != grOk)/* an error occurred */
   {  printf("Graphics error: %s\n", grapherrormsg(errorcode));
      puts("Press any key to halt:");   getch();
/* terminate with an error code */   exit(0);
   }
   maxx = getmaxx()-1;maxy = getmaxy()-1;  maxcolor = getmaxcolor()+1;
   setcolor(5);rectangle(1,1,maxx,maxy);
   while (!kbhit())
   {
for(f=0;f<15;f++)
{ xCoord=20+f*35;  yCoord=50;
  color = random( maxcolor );
  for(i=0;i<4;i++)
   for(j=0;j<4;j++)
    for(k=0;k<8;k++)
    { y=yCoord+i*8+k;
      for(n=0;n<8;n++)
      { x=xCoord+j*8+n;//unsigned
	var1=(Mask[n]);
	var2=(Boy[f % 4][i][j][k]);
	var=var2 & var1;
	if (0!=(var)) putpixel(x, y, color);
	}
     }
}

      }
/* clean up */ outtextxy(40,maxy-50,"press ESC");while(27!=getch());
   closegraph();
   return 0;
}
